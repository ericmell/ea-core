<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <substitutionProperty name="log.base" value="./logs/" />  
	<configuration scan="false" scanPeriod="1 seconds" debug="false">
		<property name="APP_Name" value="base" />
		<contextName>${APP_Name}</contextName>
		<timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss" />  <!-- 时间字符串可以${bySecond} -->
	</configuration>
    <!--appender定义的是写入的目的地： 需要根据日志的内容，对日志不同输出进行不同队列或者文件的写入 -->
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<!-- <filter class="ch.qos.logback.classic.filter.LevelFilter"> <level>debug</level> 
			<onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> -->
		<!-- 过滤日志
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<level>debug</level>
			<evaluator name="myEval">
				<expression>message.contains("Hello")</expression>
			</evaluator>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		 -->
		<encoder charset="GBK">
			<pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger -logback-base-common：%msg%n
			</pattern>
		</encoder>
	</appender>
    <!-- 
	<appender name="logfile-dao"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator name="myEval_dao">
				<expression>message.contains("dao")</expression>
			</evaluator>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<Encoding>UTF-8</Encoding>
		<File>${log.base}dao.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.base}.%d{yyyy-MM-dd}_dao.log.zip
			</FileNamePattern>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
		</layout>
	</appender>
	<appender name="logfile-service"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator name="myEval_service">
				<expression>message.contains("service")</expression>
			</evaluator>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<Encoding>UTF-8</Encoding>
		<File>${log.base}service.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>${log.base}.%d{yyyy-MM-dd}_service.log.zip
			</FileNamePattern>
		</rollingPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
		</layout>
	</appender>
	 -->
	<!--  队列需要在jndi中进行声明，于是加了jndi.properties文件进buildpath， -->
	<!-- 
	<appender name="jms_dao" class="ch.qos.logback.classic.net.JMSQueueAppender">
		<InitialContextFactoryName>
			org.apache.activemq.jndi.ActiveMQInitialContextFactory
		</InitialContextFactoryName>
		<ProviderURL>tcp://192.168.1.120:61616</ProviderURL>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator name="myEval_service">
				<expression>message.contains("dao")</expression>
			</evaluator>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<QueueConnectionFactoryBindingName>ConnectionFactory
		</QueueConnectionFactoryBindingName>
		<QueueBindingName>cms_dao_log</QueueBindingName>
	</appender>
	<appender name="jms_service" class="ch.qos.logback.classic.net.JMSQueueAppender">
		<InitialContextFactoryName>
			org.apache.activemq.jndi.ActiveMQInitialContextFactory
		</InitialContextFactoryName>
		<ProviderURL>tcp://192.168.1.120:61616</ProviderURL>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator name="myEval_service">
				<expression>message.contains("service.impl")</expression>
			</evaluator>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<QueueConnectionFactoryBindingName>ConnectionFactory
		</QueueConnectionFactoryBindingName>
		<QueueBindingName>cms_service_log</QueueBindingName>
	</appender>
    -->

	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<file>testFile.log</file>
		<append>true</append>
		<encoder>
			<pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n
			</pattern>
		</encoder>
	</appender>

	<!-- SocketAppender、SMTPAppender、DBAppender、SyslogAppender、SiftingAppender， 
		可以参考官方文档。当然大家可以编写自己的Appender -->
	<logger name="com.sunrise.ueaac.base.common" level="debug"
		additivity="false"><!-- additivity="true"上级也会打印一次 -->
		<appender-ref ref="stdout" />
	</logger>
	<logger name="org.hibernate">
		<level value="INFO" />
	</logger>	
	<logger name="com.cms5.cmsservice.jms">
		<level value="INFO" />
	</logger>
	<logger name="java.sql.PreparedStatement">
		<level value="INFO" />
	</logger>
	<logger name="java.sql.Connection">
		<level value="DEBUG" />
	</logger>
	<logger name="java.sql.Statement">
		<level value="INFO" />
	</logger>
	<logger name="com.ibatis">
		<level value="INFO" />
	</logger>
	<logger name="com.ibatis.common.jdbc.SimpleDataSource">
		<level value="INFO" />
	</logger>
	<logger name="com.ibatis.common.jdbc.ScriptRunner">
		<level value="INFO" />
	</logger>
	<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate">
		<level value="INFO" />
	</logger>
	<logger name="com.danga.MemCached">
		<level value="INFO" />
	</logger>
	<logger name="org.springframework.test">
		<level value="INFO" />
	</logger>
	<logger name="org.apache.struts2">
		<level value="INFO" />
	</logger>
	<logger name="ch.qos" level="ERROR" additivity="false"><!-- additivity="true"上级也会打印一次 -->
		<appender-ref ref="FILE" />
	</logger>


	
    <root>  
        <level value="debug" />  
        <appender-ref ref="stdout" /> 
        <!--  
         <appender-ref ref="jms_dao" />  
        <appender-ref ref="jms_service" />  
         -->
        <appender-ref ref="logfile-dao" />  
        <appender-ref ref="logfile-service" />  

    </root>  
	
</configuration> 
